import { preloadImages } from "../libs/utils.js";
let lenis;
function intro() {
  (lenis = new Lenis()), lenis.on("scroll", () => ScrollTrigger.update());
  const t = (e) => {
    lenis.raf(1e3 * e), requestAnimationFrame(t);
  };
  requestAnimationFrame(t);
  const e = document.querySelector(".canvas"),
    o = e.getContext("2d");
  (e.width = window.innerWidth), (e.height = window.innerHeight);
  const n = [];
  let i = { frame: 0 };
  function a() {
    n.length > 0 &&
      ((o.canvas.width = n[0].width),
      (o.canvas.height = n[0].height),
      o.clearRect(0, 0, e.width, e.height),
      o.drawImage(n[i.frame], 0, 0));
  }
  document.querySelectorAll(".image-container img").forEach((t) => {
    const e = new Image();
    (e.src = t.src), n.push(e);
  }),
    Promise.all(
      n.map(
        (t) =>
          new Promise((e) => {
            t.onload = e;
          })
      )
    ).then(() => {
      gsap.to(i, {
        frame: n.length - 1,
        snap: "frame",
        ease: "none",
        scrollTrigger: { scrub: 1, pin: "canvas", end: "150%", pinSpacing: !1 },
        onUpdate: a
      }),
        a();
    });
}
function productDetail() {
  $(window).width() > 767 &&
    ($(".list-button").mousemove(function (t) {
      callParallax(t);
    }),
    $(".list-button").mouseleave(function (t) {
      TweenMax.to(this, 0.3, { height: 0, width: 40 }),
        TweenMax.to(".button-circle", 0.3, { scale: 1, x: 0, y: 0 });
    }),
    $(".list-button .button-circle").mouseenter(function (t) {
      TweenMax.to(this, 0.3, { scale: 1.4 });
    })),
    $(
      ".product-variant .content-top__image, .product-variant .btn-more-info"
    ).on("click", function (t) {
      $(".content-discover").addClass("show-popup"),
        $(".content-discover").css("z-index", "1999"),
        $("body").addClass("overflow-hidden");
    }),
    $(".content-discover__close").on("click", function (t) {
      $(".content-discover").removeClass("show-popup"),
        $(window).width() < 767
          ? setTimeout(() => {
              $(".content-discover").css("z-index", "-1");
            }, 300)
          : $(".content-discover").css("z-index", "-1"),
        $("body").removeClass("overflow-hidden");
    }),
    $("section.product-detail .wrapper-content .tab-close").on(
      "click",
      function () {
        $(".list-button .button-circle.open").trigger("click");
      }
    ),
    $(".list-button .button-circle").on("click", function (t) {
      let e = $(t.currentTarget),
        o = e.data("tab"),
        n = e.closest("section.product-detail"),
        i = ".product-1";
      if (
        (n.hasClass("product-2") && (i = ".product-2"),
        n.toggleClass("open"),
        $("body").toggleClass("overflow-hidden"),
        $(".sticky-menu").toggleClass("hide"),
        e.hasClass("open"))
      )
        closeTabProductDetail(i, o);
      else {
        e.addClass("open"),
          e.siblings().addClass("d-none"),
          $(`section.product-detail${i} .content`)
            .addClass("active")
            .addClass(o),
          $(`section.product-detail${i} .tab`).removeClass("active"),
          $(`section.product-detail${i} [detail-${o}]`).addClass("active");
        let t = $(`section.product-detail${i} [detail-${o}] video`);
        t.length && t[0].play(),
          $("body").addClass("overflow-hidden"),
          $(".sticky-menu").addClass("hide");
        let n = $(window).width() / 2;
        (n = n > 600 && $(window).width() > 767 ? 600 : $(window).width()),
          $(`section.product-detail${i} .wrapper-content`)
            .stop()
            .animate({ width: n }, 1e3);
        const a = $(window).width() < 768 ? "0.6" : "1";
        gsap.fromTo(
          `section.product-detail${i} .wrapper-content`,
          { width: 0, x: "100%" },
          { width: n, x: 0, duration: a, ease: "none" }
        );
      }
    });
  const t = $(".content-discover .dot-color");
  t.on("click", function () {
    let e = $(this);
    if (e.hasClass("active")) return;
    t.removeClass("active"), e.addClass("active");
    let o = e.data("color");
    $(".content-discover .swiper-discover-img").removeClass("active"),
      $(`.content-discover .swiper-discover-img[data-color=${o}]`).addClass(
        "active"
      ),
      $(
        `section.product-variant .content-pagination li[data-variant=${o}]`
      ).trigger("click"),
      $(".content-discover .color .title").text(o);
  });
}
function closeTabProductDetail(t, e) {
  $(`section.product-detail${t} .content`).removeClass("active").removeClass(e),
    $(`section.product-detail${t} .tab`).removeClass("active"),
    $(`section.product-detail${t} .list-button .button-circle`)
      .removeClass("d-none")
      .removeClass("open"),
    $("body").removeClass("overflow-hidden"),
    $(".sticky-menu").removeClass("hide");
  let o = $(window).width() / 2;
  (o = o > 600 && $(window).width() > 767 ? 600 : $(window).width()),
    gsap.fromTo(
      `section.product-detail${t} .wrapper-content .detail-${e}`,
      { y: 0 },
      {
        y: "100%",
        duration: 1,
        ease: "none",
        onComplete: function () {
          gsap.set(this.target, { transform: "none" });
        }
      }
    ),
    gsap.fromTo(
      `section.product-detail${t} .wrapper-content`,
      { x: 0 },
      {
        x: "100%",
        duration: 1,
        ease: "none",
        onUpdate: function () {
          this.progress() > 0.2 &&
            gsap.fromTo(
              `section.product-detail${t} .wrapper-content`,
              { width: o },
              { width: 0, duration: 0.5, ease: "none" }
            );
        }
      }
    );
}
function animateZoomIn() {
  gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);
  const t = $(window).width() < 767 ? "-70" : "-150",
    e = $(window).width() < 767 ? "65" : "100",
    o = $(window).width() < 767 ? "-70" : "-150";
  $(".animate-zoomin").each(function () {
    let o = $(this);
    gsap.fromTo(
      $(this).find(".wrapper-image .img"),
      { scale: "2", transformOrigin: "top center", y: t },
      {
        scrollTrigger: {
          trigger: this,
          start: "top 103%",
          end: `+=${e}%`,
          scrub: 0.5,
          onEnterBack: () => {
            $(this).removeClass("done");
            let t = $(this).find(".list-button .button-circle.open"),
              e = "";
            $(this).hasClass("product-2") && (e = ".product-2");
            t.data("tab");
          },
          onLeaveBack: () => {
            $(this).removeClass("done");
          },
          onUpdate: (t) => {
            t.progress > 0.99
              ? $(this).addClass("done")
              : $(this).removeClass("done");
          }
        },
        scale: "1",
        y: 0,
        duration: 1.5,
        ease: "none",
        stagger: 0.1,
        onComplete: () => {
          $(this).addClass("done");
        }
      }
    ),
      o.on("click", function () {
        gsap.to(window, {
          scrollTo: {
            y: o.offset().top - (window.innerHeight - o.outerHeight()),
            autoKill: !1
          },
          duration: 1,
          ease: "power2.out"
        });
      });
  }),
    $(".animate-zoomin").each(function () {
      let t = $(this);
      gsap.fromTo(
        $(this).find(".wrapper-image .img"),
        { scale: "2", transformOrigin: "top center", y: o },
        {
          scrollTrigger: {
            trigger: this,
            start: "top 103%",
            end: `+=${e}%`,
            scrub: 0.5,
            onEnterBack: () => {
              $(this).removeClass("done");
              let t = $(this).find(".list-button .button-circle.open"),
                e = "";
              $(this).hasClass("product-2") && (e = ".product-2");
              t.data("tab");
            },
            onLeaveBack: () => {
              $(this).removeClass("done");
            },
            onUpdate: (t) => {
              t.progress > 0.99
                ? $(this).addClass("done")
                : $(this).removeClass("done");
            }
          },
          scale: "1",
          y: 0,
          duration: 1.5,
          ease: "none",
          stagger: 0.1,
          onComplete: () => {
            $(this).addClass("done");
          }
        }
      ),
        t.on("click", function () {
          gsap.to(window, {
            scrollTo: {
              y: t.offset().top - (window.innerHeight - t.outerHeight()),
              autoKill: !1
            },
            duration: 1,
            ease: "power2.out"
          });
        });
    });
}
function parallaxIt(t, e, o) {
  var n = $(e),
    i = t.pageX,
    a = t.pageY,
    r = ((i - n.offset().left) / n.width()) * o,
    s = ((a - n.offset().top) / n.height()) * o;
  TweenMax.to(n, 0.3, { x: r - o / 2, y: s - o / 2, ease: Power2.easeOut });
}
function callParallax(t) {
  parallaxIt(t, $(t.target), 30);
}
function hero() {
  gsap.registerPlugin(ScrollTrigger),
    gsap.fromTo(
      ".hero__img",
      { scale: 0.9 },
      { scale: 1, duration: 2, ease: "power2.out" }
    ),
    gsap.fromTo(
      ".hero__img",
      { scale: 1 },
      {
        scale: 2,
        autoAlpha: 0,
        ease: "sine.out",
        scrollTrigger: {
          trigger: ".hero__img",
          start: "top top",
          end: "+=100%",
          scrub: !0,
          pin: !0
        }
      }
    ),
    gsap.fromTo(
      ".intro",
      { autoAlpha: 0 },
      {
        autoAlpha: 1,
        scrollTrigger: {
          trigger: ".intro",
          start: "top top",
          end: "top 20%",
          scrub: 1
        }
      }
    );
}
function animationText() {
  gsap.registerPlugin(ScrollTrigger),
    gsap.utils.toArray(".data-fade-in").forEach((t, e) => {
      gsap.fromTo(
        t,
        { opacity: 0, y: 20 },
        {
          scrollTrigger: { trigger: t, start: "top 85%", end: "bottom 85%" },
          opacity: 1,
          y: 0,
          duration: 1,
          ease: "sine.out",
          stagger: { amount: 0.3 }
        }
      );
    }),
    document.querySelectorAll(".data-text-split").forEach((t) => {
      new SplitType(t, { types: "chars" });
    });
}
function text() {
  [
    ...document.querySelectorAll(
      ".details__title[data-splitting][data-effect-one]"
    )
  ].forEach((t) => {
    const e = t.querySelectorAll(".char");
    e.forEach((t) => gsap.set(t.parentNode, { perspective: 1e3 })),
      gsap.fromTo(
        e,
        {
          "will-change": "opacity, transform",
          transformOrigin: "50% 0%",
          opacity: 0,
          rotationX: -90,
          z: -200
        },
        {
          ease: "power1",
          opacity: 1,
          stagger: 0.05,
          rotationX: 0,
          z: 0,
          scrollTrigger: {
            trigger: t,
            start: "center bottom",
            end: "bottom top+=50%"
          }
        }
      );
  });
}
function changeVariantProduct() {
  $("section.product-variant .content-pagination li").on("click", function () {
    let t = $(this),
      e = t.data("variant"),
      o = t.data("ref");
    t.addClass("active"),
      t.siblings().removeClass("active"),
      $("section.product-variant .content-top__sku span").text(o),
      $("section.product-variant .content-top__image img").removeClass(
        "active"
      ),
      $(
        "section.product-variant .content-top__image .swiper-img-wrapper"
      ).removeClass("active"),
      $(
        `section.product-variant .content-top__image img[data-variant='${e}']`
      ).addClass("active"),
      $(
        `section.product-variant .content-top__image .swiper-img-wrapper[data-variant='${e}']`
      ).addClass("active"),
      $(
        `.content-discover__content .group-color .dot-color[data-color='${e}']`
      ).trigger("click");
  }),
    gsap.registerPlugin(ScrollTrigger),
    gsap.utils.toArray(".js-parallax").forEach((t) => {
      const e = t.getAttribute("data-y") || -100;
      gsap.to(t, {
        y: e,
        scrollTrigger: {
          trigger: t,
          start: "top bottom",
          end: "bottom top",
          scrub: 1,
          duration: 1,
          ease: "power4"
        }
      });
    }),
    gsap.to(".product-variant", {
      scrollTrigger: {
        trigger: ".product-variant",
        start: "top top",
        end: "+=150%",
        scrub: 1,
        pin: !0,
        onUpdate: (t) => {
          t.progress > 0.5
            ? $(".product-variant").addClass("done")
            : $(".product-variant").removeClass("done");
        }
      }
    }),
    $(".content-top__image .swiper").mouseenter(function (t) {
      $(this).closest(".content-top__image").addClass("active");
    }),
    $(".content-top__image .swiper").mouseleave(function (t) {
      $(this).closest(".content-top__image").removeClass("active");
    }),
    document.querySelectorAll(".swiper-img-wrapper").forEach(function (t) {
      new Swiper(t.querySelector(".swiper"), {
        loop: !0,
        slidesPerView: 1,
        slidesPerPage: 1,
        allowTouchMove: !1,
        speed: 500,
        autoplay: !1,
        navigation: {
          nextEl: t.querySelector(".swiper-button-next"),
          prevEl: t.querySelector(".swiper-button-prev")
        }
      });
    });
}
function stickyMenu() {
  gsap.registerPlugin(ScrollTrigger, ScrollToPlugin),
    window.addEventListener("DOMContentLoaded", () => {
      const t = gsap.utils.toArray(".sticky-menu__container ul li a");
      t.length &&
        (t.forEach((e) => {
          e.addEventListener("click", (o) => {
            const n = e.getAttribute("href");
            n &&
              n.startsWith("#") &&
              document.querySelector(n) &&
              (o.preventDefault(),
              t.forEach((t) => t.classList.remove("active")),
              e.classList.add("active"),
              gsap.to(window, {
                duration: 0.5,
                scrollTo: { y: n, offsetY: 0 },
                ease: "power2.out"
              }));
          });
        }),
        t.forEach((e) => {
          const o = e.getAttribute("href");
          if (!o || !o.startsWith("#") || !document.querySelector(o)) return;
          const n = document.querySelector(o);
          ScrollTrigger.create({
            trigger: n,
            start: "top 50%",
            end: "bottom 50%",
            onEnter: () => {
              t.forEach((t) => t.classList.remove("active")),
                e.classList.add("active");
            },
            onEnterBack: () => {
              t.forEach((t) => t.classList.remove("active")),
                e.classList.add("active");
            },
            onLeave: () => e.classList.remove("active"),
            onLeaveBack: () => e.classList.remove("active")
          });
        }));
    }),
    gsap.set(".sticky-menu__container ul li:nth-child(-n+3)", {
      autoAlpha: 1,
      width: "auto"
    }),
    gsap.set(".sticky-menu__container ul li:nth-child(4)", {
      autoAlpha: 0,
      width: "0",
      padding: "0"
    });
  const t = $(window).width() < 767 ? "100%" : "auto",
    e = gsap.timeline({
      scrollTrigger: {
        trigger: ".product-variant",
        start: "top 100%",
        end: "bottom top",
        toggleActions: "play none none reverse",
        onUpdate: (t) => {
          document.querySelector(".product-variant").classList.contains("done")
            ? e.play()
            : e.reverse();
        }
      }
    });
  e.to(".sticky-menu__container", { duration: 0.3, ease: "power2.in" })
    .to(
      ".sticky-menu__container ul li:nth-child(4)",
      {
        autoAlpha: 1,
        width: t,
        scaleX: 1,
        padding: "initial",
        duration: 0.5,
        ease: "power2.inOut"
      },
      "<"
    )
    .to(
      ".sticky-menu__container ul li:nth-child(-n+3)",
      {
        autoAlpha: 0,
        width: "0",
        padding: "0",
        duration: 0.5,
        ease: "power2.inOut"
      },
      "<"
    )
    .to(".sticky-menu__container", {
      duration: 0.3,
      transformOrigin: "center",
      ease: "power2.out"
    });
}
function swiperDiscover() {
  const t = document.querySelectorAll(".swiper-discover-img");
  t.length &&
    t.forEach((t) => {
      new Swiper(t, {
        slidesPerView: 1,
        loop: "true",
        pagination: { el: t.querySelector(".swiper-pagination") },
        navigation: {
          nextEl: t.querySelector(".swiper-button-next"),
          prevEl: t.querySelector(".swiper-button-prev")
        }
      });
    });
}
function customCursor() {
  const t = document.querySelector(".cursor"),
    e = document.querySelector(".content-top__image");
  if (!t || !e) return;
  gsap.set(t, { xPercent: -50, yPercent: -50, opacity: 0 });
  let o = !1;
  e.addEventListener("mouseenter", () => {
    (o = !0), gsap.to(t, { opacity: 1, duration: 0.3, ease: "power2.out" });
  }),
    e.addEventListener("mouseleave", () => {
      (o = !1), gsap.to(t, { opacity: 0, duration: 0.3, ease: "power2.out" });
    }),
    document.addEventListener("mousemove", (e) => {
      o &&
        gsap.to(t, {
          x: e.clientX,
          y: e.clientY,
          duration: 0.2,
          ease: "power2.out"
        });
    });
}
Splitting(), stickyMenu();
const init = () => {
  intro(),
    productDetail(),
    hero(),
    animationText(),
    text(),
    swiperDiscover(),
    animateZoomIn(),
    changeVariantProduct(),
    customCursor(),
    document
      .querySelectorAll(".button-custom")
      .forEach(
        (t) =>
          (t.innerHTML =
            "<div><span>" +
            t.textContent.trim().split("").join("</span><span>") +
            "</span></div>")
      );
};
init(),
  $(window).on("beforeunload", function () {
    window.scrollTo(0, 0);
  });
